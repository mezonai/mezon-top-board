version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - mezon-mtb-net

  backend:
    build: ./backend
    container_name: backend
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres
    environment:
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_SCHEMA: ${POSTGRES_SCHEMA}
    ports:
      - "${BACKEND_PORT}:8000"
    networks:
      - mezon-mtb-net

  frontend:
    build: ./frontend
    container_name: frontend
    environment:
      REACT_APP_BACKEND_URL: ${REACT_APP_BACKEND_ENDPOINT}
    ports:
      - "${FRONTEND_PORT}:3000"
    networks:
      - mezon-mtb-net

  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   depends_on:
  #     - backend
  #     - frontend
  #   networks:
  #     - mezon-mtb-net

volumes:
  postgres_data:

networks:
  mezon-mtb-net: